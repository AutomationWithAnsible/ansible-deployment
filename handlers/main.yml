---

- name: restart app
  debug:
    msg="Restart app"
  changed_when: true
  notify:
     - restart app initd
     - restart app supervisor

- name: restart app initd
  service:
    name="{{ deployment_artifact_name }}"
    state="restarted"
    enabled="yes"
  changed_when: true
  notify: wait 4 port
  when: deployment_install_daemon == "initd"

- name: restart app supervisor
  supervisorctl:
    name="{{ deployment_artifact_name }}"
    state="restarted"
  changed_when: true
  notify: wait 4 port
  when: deployment_install_daemon == "supervisor"


- name: wait 4 port
  wait_for:
    port="{{ deployment_http_check_port }}"
    host="{{ ansible_ssh_host | default(inventory_hostname) }}"
    delay="{{ deployment_delay_sec }}"
    timeout="{{ deployment_timeout_wait_sec }}"
  changed_when: true
  notify: 
    - HTTP request
    - deployment notification
  register: wait_4_port

- name: HTTP request
  uri:
    url="{{ deployment_http_check_url }}"
    return_content="yes"
    HEADER_Accept="text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
  changed_when: true
  notify: 
    - fail on incorrect payload
  register: webpage
  when: deployment_http_check_url_suffix is defined
  tags: ["verify-working"]

- name: fail on incorrect payload
  fail:
    msg="{{ deployment_artifact_name }} is not happy, {{deployment_http_check_url}} does not return expected content [{{deployment_http_check_expected_content}}]"
  register: payload
  when: deployment_http_check_expected_content is defined and deployment_http_check_expected_content not in webpage.content
  tags: ["verify-working"]

- name: deployment notification
  debug:
      msg="Notify"
  changed_when: True
  notify: 
    - check if deployment succeeded
    - notification slack
  when: deployment_notification_enabled

- name: check if deployment succeeded
  set_fact:
    deployment_status: "Succeeded"
  when: deployment_notification_slack_enabled and wait_4_port | success and webpage | success and payload | success and (deployment_http_check_url_suffix is defined) and (deployment_http_check_expected_content in webpage.content)

- name: notification slack
  slack:
    msg="Deployment of '{{ deployment_supervisor_name }}' verions '{{ deployment_artifact_version_hash }}' on '{{ inventory_hostname }}' [ {{ deployment_status }} ]"
    domain="{{ deployment_notification_slack_token }}"
    token="{{ deployment_notification_slack_domain }}"
    validate_certs="no"
  connection: local
  delegate_to: localhost
  sudo: false

